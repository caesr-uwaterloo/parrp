// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: custom_mem_trace.proto

#ifndef PROTOBUF_INCLUDED_custom_5fmem_5ftrace_2eproto
#define PROTOBUF_INCLUDED_custom_5fmem_5ftrace_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_custom_5fmem_5ftrace_2eproto 

namespace protobuf_custom_5fmem_5ftrace_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_custom_5fmem_5ftrace_2eproto
namespace ProtoMessage {
class AddrAccessStats;
class AddrAccessStatsDefaultTypeInternal;
extern AddrAccessStatsDefaultTypeInternal _AddrAccessStats_default_instance_;
class CustomMemTrace;
class CustomMemTraceDefaultTypeInternal;
extern CustomMemTraceDefaultTypeInternal _CustomMemTrace_default_instance_;
}  // namespace ProtoMessage
namespace google {
namespace protobuf {
template<> ::ProtoMessage::AddrAccessStats* Arena::CreateMaybeMessage<::ProtoMessage::AddrAccessStats>(Arena*);
template<> ::ProtoMessage::CustomMemTrace* Arena::CreateMaybeMessage<::ProtoMessage::CustomMemTrace>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ProtoMessage {

enum CustomMemTrace_AccessType {
  CustomMemTrace_AccessType_IFETCH = 0,
  CustomMemTrace_AccessType_READ = 1,
  CustomMemTrace_AccessType_WRITE = 2
};
bool CustomMemTrace_AccessType_IsValid(int value);
const CustomMemTrace_AccessType CustomMemTrace_AccessType_AccessType_MIN = CustomMemTrace_AccessType_IFETCH;
const CustomMemTrace_AccessType CustomMemTrace_AccessType_AccessType_MAX = CustomMemTrace_AccessType_WRITE;
const int CustomMemTrace_AccessType_AccessType_ARRAYSIZE = CustomMemTrace_AccessType_AccessType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CustomMemTrace_AccessType_descriptor();
inline const ::std::string& CustomMemTrace_AccessType_Name(CustomMemTrace_AccessType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CustomMemTrace_AccessType_descriptor(), value);
}
inline bool CustomMemTrace_AccessType_Parse(
    const ::std::string& name, CustomMemTrace_AccessType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CustomMemTrace_AccessType>(
    CustomMemTrace_AccessType_descriptor(), name, value);
}
enum CustomMemTrace_HitStatus {
  CustomMemTrace_HitStatus_Local_L1Cache = 0,
  CustomMemTrace_HitStatus_Remote_L1Cache = 1,
  CustomMemTrace_HitStatus_L2Cache = 2,
  CustomMemTrace_HitStatus_Memory = 3
};
bool CustomMemTrace_HitStatus_IsValid(int value);
const CustomMemTrace_HitStatus CustomMemTrace_HitStatus_HitStatus_MIN = CustomMemTrace_HitStatus_Local_L1Cache;
const CustomMemTrace_HitStatus CustomMemTrace_HitStatus_HitStatus_MAX = CustomMemTrace_HitStatus_Memory;
const int CustomMemTrace_HitStatus_HitStatus_ARRAYSIZE = CustomMemTrace_HitStatus_HitStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CustomMemTrace_HitStatus_descriptor();
inline const ::std::string& CustomMemTrace_HitStatus_Name(CustomMemTrace_HitStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CustomMemTrace_HitStatus_descriptor(), value);
}
inline bool CustomMemTrace_HitStatus_Parse(
    const ::std::string& name, CustomMemTrace_HitStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CustomMemTrace_HitStatus>(
    CustomMemTrace_HitStatus_descriptor(), name, value);
}
enum CustomMemTrace_DataRegion {
  CustomMemTrace_DataRegion_GLOBAL = 0,
  CustomMemTrace_DataRegion_STACK = 1,
  CustomMemTrace_DataRegion_HEAP = 2
};
bool CustomMemTrace_DataRegion_IsValid(int value);
const CustomMemTrace_DataRegion CustomMemTrace_DataRegion_DataRegion_MIN = CustomMemTrace_DataRegion_GLOBAL;
const CustomMemTrace_DataRegion CustomMemTrace_DataRegion_DataRegion_MAX = CustomMemTrace_DataRegion_HEAP;
const int CustomMemTrace_DataRegion_DataRegion_ARRAYSIZE = CustomMemTrace_DataRegion_DataRegion_MAX + 1;

const ::google::protobuf::EnumDescriptor* CustomMemTrace_DataRegion_descriptor();
inline const ::std::string& CustomMemTrace_DataRegion_Name(CustomMemTrace_DataRegion value) {
  return ::google::protobuf::internal::NameOfEnum(
    CustomMemTrace_DataRegion_descriptor(), value);
}
inline bool CustomMemTrace_DataRegion_Parse(
    const ::std::string& name, CustomMemTrace_DataRegion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CustomMemTrace_DataRegion>(
    CustomMemTrace_DataRegion_descriptor(), name, value);
}
enum AddrAccessStats_DataRegion {
  AddrAccessStats_DataRegion_GLOBAL = 0,
  AddrAccessStats_DataRegion_STACK = 1,
  AddrAccessStats_DataRegion_HEAP = 2
};
bool AddrAccessStats_DataRegion_IsValid(int value);
const AddrAccessStats_DataRegion AddrAccessStats_DataRegion_DataRegion_MIN = AddrAccessStats_DataRegion_GLOBAL;
const AddrAccessStats_DataRegion AddrAccessStats_DataRegion_DataRegion_MAX = AddrAccessStats_DataRegion_HEAP;
const int AddrAccessStats_DataRegion_DataRegion_ARRAYSIZE = AddrAccessStats_DataRegion_DataRegion_MAX + 1;

const ::google::protobuf::EnumDescriptor* AddrAccessStats_DataRegion_descriptor();
inline const ::std::string& AddrAccessStats_DataRegion_Name(AddrAccessStats_DataRegion value) {
  return ::google::protobuf::internal::NameOfEnum(
    AddrAccessStats_DataRegion_descriptor(), value);
}
inline bool AddrAccessStats_DataRegion_Parse(
    const ::std::string& name, AddrAccessStats_DataRegion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddrAccessStats_DataRegion>(
    AddrAccessStats_DataRegion_descriptor(), name, value);
}
// ===================================================================

class CustomMemTrace : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMessage.CustomMemTrace) */ {
 public:
  CustomMemTrace();
  virtual ~CustomMemTrace();

  CustomMemTrace(const CustomMemTrace& from);

  inline CustomMemTrace& operator=(const CustomMemTrace& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomMemTrace(CustomMemTrace&& from) noexcept
    : CustomMemTrace() {
    *this = ::std::move(from);
  }

  inline CustomMemTrace& operator=(CustomMemTrace&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomMemTrace& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CustomMemTrace* internal_default_instance() {
    return reinterpret_cast<const CustomMemTrace*>(
               &_CustomMemTrace_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CustomMemTrace* other);
  friend void swap(CustomMemTrace& a, CustomMemTrace& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomMemTrace* New() const final {
    return CreateMaybeMessage<CustomMemTrace>(NULL);
  }

  CustomMemTrace* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CustomMemTrace>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CustomMemTrace& from);
  void MergeFrom(const CustomMemTrace& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CustomMemTrace* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CustomMemTrace_AccessType AccessType;
  static const AccessType IFETCH =
    CustomMemTrace_AccessType_IFETCH;
  static const AccessType READ =
    CustomMemTrace_AccessType_READ;
  static const AccessType WRITE =
    CustomMemTrace_AccessType_WRITE;
  static inline bool AccessType_IsValid(int value) {
    return CustomMemTrace_AccessType_IsValid(value);
  }
  static const AccessType AccessType_MIN =
    CustomMemTrace_AccessType_AccessType_MIN;
  static const AccessType AccessType_MAX =
    CustomMemTrace_AccessType_AccessType_MAX;
  static const int AccessType_ARRAYSIZE =
    CustomMemTrace_AccessType_AccessType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AccessType_descriptor() {
    return CustomMemTrace_AccessType_descriptor();
  }
  static inline const ::std::string& AccessType_Name(AccessType value) {
    return CustomMemTrace_AccessType_Name(value);
  }
  static inline bool AccessType_Parse(const ::std::string& name,
      AccessType* value) {
    return CustomMemTrace_AccessType_Parse(name, value);
  }

  typedef CustomMemTrace_HitStatus HitStatus;
  static const HitStatus Local_L1Cache =
    CustomMemTrace_HitStatus_Local_L1Cache;
  static const HitStatus Remote_L1Cache =
    CustomMemTrace_HitStatus_Remote_L1Cache;
  static const HitStatus L2Cache =
    CustomMemTrace_HitStatus_L2Cache;
  static const HitStatus Memory =
    CustomMemTrace_HitStatus_Memory;
  static inline bool HitStatus_IsValid(int value) {
    return CustomMemTrace_HitStatus_IsValid(value);
  }
  static const HitStatus HitStatus_MIN =
    CustomMemTrace_HitStatus_HitStatus_MIN;
  static const HitStatus HitStatus_MAX =
    CustomMemTrace_HitStatus_HitStatus_MAX;
  static const int HitStatus_ARRAYSIZE =
    CustomMemTrace_HitStatus_HitStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HitStatus_descriptor() {
    return CustomMemTrace_HitStatus_descriptor();
  }
  static inline const ::std::string& HitStatus_Name(HitStatus value) {
    return CustomMemTrace_HitStatus_Name(value);
  }
  static inline bool HitStatus_Parse(const ::std::string& name,
      HitStatus* value) {
    return CustomMemTrace_HitStatus_Parse(name, value);
  }

  typedef CustomMemTrace_DataRegion DataRegion;
  static const DataRegion GLOBAL =
    CustomMemTrace_DataRegion_GLOBAL;
  static const DataRegion STACK =
    CustomMemTrace_DataRegion_STACK;
  static const DataRegion HEAP =
    CustomMemTrace_DataRegion_HEAP;
  static inline bool DataRegion_IsValid(int value) {
    return CustomMemTrace_DataRegion_IsValid(value);
  }
  static const DataRegion DataRegion_MIN =
    CustomMemTrace_DataRegion_DataRegion_MIN;
  static const DataRegion DataRegion_MAX =
    CustomMemTrace_DataRegion_DataRegion_MAX;
  static const int DataRegion_ARRAYSIZE =
    CustomMemTrace_DataRegion_DataRegion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataRegion_descriptor() {
    return CustomMemTrace_DataRegion_descriptor();
  }
  static inline const ::std::string& DataRegion_Name(DataRegion value) {
    return CustomMemTrace_DataRegion_Name(value);
  }
  static inline bool DataRegion_Parse(const ::std::string& name,
      DataRegion* value) {
    return CustomMemTrace_DataRegion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 address = 2;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  ::google::protobuf::uint64 address() const;
  void set_address(::google::protobuf::uint64 value);

  // required int32 bb_id = 1;
  bool has_bb_id() const;
  void clear_bb_id();
  static const int kBbIdFieldNumber = 1;
  ::google::protobuf::int32 bb_id() const;
  void set_bb_id(::google::protobuf::int32 value);

  // required .ProtoMessage.CustomMemTrace.AccessType access_type = 4;
  bool has_access_type() const;
  void clear_access_type();
  static const int kAccessTypeFieldNumber = 4;
  ::ProtoMessage::CustomMemTrace_AccessType access_type() const;
  void set_access_type(::ProtoMessage::CustomMemTrace_AccessType value);

  // required uint64 line_address = 3;
  bool has_line_address() const;
  void clear_line_address();
  static const int kLineAddressFieldNumber = 3;
  ::google::protobuf::uint64 line_address() const;
  void set_line_address(::google::protobuf::uint64 value);

  // required .ProtoMessage.CustomMemTrace.HitStatus hit_status = 5;
  bool has_hit_status() const;
  void clear_hit_status();
  static const int kHitStatusFieldNumber = 5;
  ::ProtoMessage::CustomMemTrace_HitStatus hit_status() const;
  void set_hit_status(::ProtoMessage::CustomMemTrace_HitStatus value);

  // required int32 thread_id = 6;
  bool has_thread_id() const;
  void clear_thread_id();
  static const int kThreadIdFieldNumber = 6;
  ::google::protobuf::int32 thread_id() const;
  void set_thread_id(::google::protobuf::int32 value);

  // required .ProtoMessage.CustomMemTrace.DataRegion data_region = 7;
  bool has_data_region() const;
  void clear_data_region();
  static const int kDataRegionFieldNumber = 7;
  ::ProtoMessage::CustomMemTrace_DataRegion data_region() const;
  void set_data_region(::ProtoMessage::CustomMemTrace_DataRegion value);

  // @@protoc_insertion_point(class_scope:ProtoMessage.CustomMemTrace)
 private:
  void set_has_bb_id();
  void clear_has_bb_id();
  void set_has_address();
  void clear_has_address();
  void set_has_line_address();
  void clear_has_line_address();
  void set_has_access_type();
  void clear_has_access_type();
  void set_has_hit_status();
  void clear_has_hit_status();
  void set_has_thread_id();
  void clear_has_thread_id();
  void set_has_data_region();
  void clear_has_data_region();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 address_;
  ::google::protobuf::int32 bb_id_;
  int access_type_;
  ::google::protobuf::uint64 line_address_;
  int hit_status_;
  ::google::protobuf::int32 thread_id_;
  int data_region_;
  friend struct ::protobuf_custom_5fmem_5ftrace_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddrAccessStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMessage.AddrAccessStats) */ {
 public:
  AddrAccessStats();
  virtual ~AddrAccessStats();

  AddrAccessStats(const AddrAccessStats& from);

  inline AddrAccessStats& operator=(const AddrAccessStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddrAccessStats(AddrAccessStats&& from) noexcept
    : AddrAccessStats() {
    *this = ::std::move(from);
  }

  inline AddrAccessStats& operator=(AddrAccessStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddrAccessStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddrAccessStats* internal_default_instance() {
    return reinterpret_cast<const AddrAccessStats*>(
               &_AddrAccessStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AddrAccessStats* other);
  friend void swap(AddrAccessStats& a, AddrAccessStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddrAccessStats* New() const final {
    return CreateMaybeMessage<AddrAccessStats>(NULL);
  }

  AddrAccessStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddrAccessStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddrAccessStats& from);
  void MergeFrom(const AddrAccessStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddrAccessStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AddrAccessStats_DataRegion DataRegion;
  static const DataRegion GLOBAL =
    AddrAccessStats_DataRegion_GLOBAL;
  static const DataRegion STACK =
    AddrAccessStats_DataRegion_STACK;
  static const DataRegion HEAP =
    AddrAccessStats_DataRegion_HEAP;
  static inline bool DataRegion_IsValid(int value) {
    return AddrAccessStats_DataRegion_IsValid(value);
  }
  static const DataRegion DataRegion_MIN =
    AddrAccessStats_DataRegion_DataRegion_MIN;
  static const DataRegion DataRegion_MAX =
    AddrAccessStats_DataRegion_DataRegion_MAX;
  static const int DataRegion_ARRAYSIZE =
    AddrAccessStats_DataRegion_DataRegion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataRegion_descriptor() {
    return AddrAccessStats_DataRegion_descriptor();
  }
  static inline const ::std::string& DataRegion_Name(DataRegion value) {
    return AddrAccessStats_DataRegion_Name(value);
  }
  static inline bool DataRegion_Parse(const ::std::string& name,
      DataRegion* value) {
    return AddrAccessStats_DataRegion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 address = 2;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  ::google::protobuf::uint64 address() const;
  void set_address(::google::protobuf::uint64 value);

  // required uint64 line_address = 3;
  bool has_line_address() const;
  void clear_line_address();
  static const int kLineAddressFieldNumber = 3;
  ::google::protobuf::uint64 line_address() const;
  void set_line_address(::google::protobuf::uint64 value);

  // required uint64 num_local_l1_hit = 5;
  bool has_num_local_l1_hit() const;
  void clear_num_local_l1_hit();
  static const int kNumLocalL1HitFieldNumber = 5;
  ::google::protobuf::uint64 num_local_l1_hit() const;
  void set_num_local_l1_hit(::google::protobuf::uint64 value);

  // required int32 bb_id = 1;
  bool has_bb_id() const;
  void clear_bb_id();
  static const int kBbIdFieldNumber = 1;
  ::google::protobuf::int32 bb_id() const;
  void set_bb_id(::google::protobuf::int32 value);

  // required bool is_ifetch = 4;
  bool has_is_ifetch() const;
  void clear_is_ifetch();
  static const int kIsIfetchFieldNumber = 4;
  bool is_ifetch() const;
  void set_is_ifetch(bool value);

  // required bool is_metadata = 11;
  bool has_is_metadata() const;
  void clear_is_metadata();
  static const int kIsMetadataFieldNumber = 11;
  bool is_metadata() const;
  void set_is_metadata(bool value);

  // required uint64 num_remote_l1_hit = 6;
  bool has_num_remote_l1_hit() const;
  void clear_num_remote_l1_hit();
  static const int kNumRemoteL1HitFieldNumber = 6;
  ::google::protobuf::uint64 num_remote_l1_hit() const;
  void set_num_remote_l1_hit(::google::protobuf::uint64 value);

  // required uint64 num_l2_hit = 7;
  bool has_num_l2_hit() const;
  void clear_num_l2_hit();
  static const int kNumL2HitFieldNumber = 7;
  ::google::protobuf::uint64 num_l2_hit() const;
  void set_num_l2_hit(::google::protobuf::uint64 value);

  // required uint64 num_memory_access = 8;
  bool has_num_memory_access() const;
  void clear_num_memory_access();
  static const int kNumMemoryAccessFieldNumber = 8;
  ::google::protobuf::uint64 num_memory_access() const;
  void set_num_memory_access(::google::protobuf::uint64 value);

  // required int32 thread_id = 9;
  bool has_thread_id() const;
  void clear_thread_id();
  static const int kThreadIdFieldNumber = 9;
  ::google::protobuf::int32 thread_id() const;
  void set_thread_id(::google::protobuf::int32 value);

  // required .ProtoMessage.AddrAccessStats.DataRegion data_region = 10;
  bool has_data_region() const;
  void clear_data_region();
  static const int kDataRegionFieldNumber = 10;
  ::ProtoMessage::AddrAccessStats_DataRegion data_region() const;
  void set_data_region(::ProtoMessage::AddrAccessStats_DataRegion value);

  // required uint64 exec_cycles = 12;
  bool has_exec_cycles() const;
  void clear_exec_cycles();
  static const int kExecCyclesFieldNumber = 12;
  ::google::protobuf::uint64 exec_cycles() const;
  void set_exec_cycles(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoMessage.AddrAccessStats)
 private:
  void set_has_bb_id();
  void clear_has_bb_id();
  void set_has_address();
  void clear_has_address();
  void set_has_line_address();
  void clear_has_line_address();
  void set_has_is_ifetch();
  void clear_has_is_ifetch();
  void set_has_num_local_l1_hit();
  void clear_has_num_local_l1_hit();
  void set_has_num_remote_l1_hit();
  void clear_has_num_remote_l1_hit();
  void set_has_num_l2_hit();
  void clear_has_num_l2_hit();
  void set_has_num_memory_access();
  void clear_has_num_memory_access();
  void set_has_thread_id();
  void clear_has_thread_id();
  void set_has_data_region();
  void clear_has_data_region();
  void set_has_is_metadata();
  void clear_has_is_metadata();
  void set_has_exec_cycles();
  void clear_has_exec_cycles();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 address_;
  ::google::protobuf::uint64 line_address_;
  ::google::protobuf::uint64 num_local_l1_hit_;
  ::google::protobuf::int32 bb_id_;
  bool is_ifetch_;
  bool is_metadata_;
  ::google::protobuf::uint64 num_remote_l1_hit_;
  ::google::protobuf::uint64 num_l2_hit_;
  ::google::protobuf::uint64 num_memory_access_;
  ::google::protobuf::int32 thread_id_;
  int data_region_;
  ::google::protobuf::uint64 exec_cycles_;
  friend struct ::protobuf_custom_5fmem_5ftrace_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CustomMemTrace

// required int32 bb_id = 1;
inline bool CustomMemTrace::has_bb_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CustomMemTrace::set_has_bb_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CustomMemTrace::clear_has_bb_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CustomMemTrace::clear_bb_id() {
  bb_id_ = 0;
  clear_has_bb_id();
}
inline ::google::protobuf::int32 CustomMemTrace::bb_id() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.CustomMemTrace.bb_id)
  return bb_id_;
}
inline void CustomMemTrace::set_bb_id(::google::protobuf::int32 value) {
  set_has_bb_id();
  bb_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.CustomMemTrace.bb_id)
}

// required uint64 address = 2;
inline bool CustomMemTrace::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CustomMemTrace::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CustomMemTrace::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CustomMemTrace::clear_address() {
  address_ = GOOGLE_ULONGLONG(0);
  clear_has_address();
}
inline ::google::protobuf::uint64 CustomMemTrace::address() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.CustomMemTrace.address)
  return address_;
}
inline void CustomMemTrace::set_address(::google::protobuf::uint64 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.CustomMemTrace.address)
}

// required uint64 line_address = 3;
inline bool CustomMemTrace::has_line_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CustomMemTrace::set_has_line_address() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CustomMemTrace::clear_has_line_address() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CustomMemTrace::clear_line_address() {
  line_address_ = GOOGLE_ULONGLONG(0);
  clear_has_line_address();
}
inline ::google::protobuf::uint64 CustomMemTrace::line_address() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.CustomMemTrace.line_address)
  return line_address_;
}
inline void CustomMemTrace::set_line_address(::google::protobuf::uint64 value) {
  set_has_line_address();
  line_address_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.CustomMemTrace.line_address)
}

// required .ProtoMessage.CustomMemTrace.AccessType access_type = 4;
inline bool CustomMemTrace::has_access_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CustomMemTrace::set_has_access_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CustomMemTrace::clear_has_access_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CustomMemTrace::clear_access_type() {
  access_type_ = 0;
  clear_has_access_type();
}
inline ::ProtoMessage::CustomMemTrace_AccessType CustomMemTrace::access_type() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.CustomMemTrace.access_type)
  return static_cast< ::ProtoMessage::CustomMemTrace_AccessType >(access_type_);
}
inline void CustomMemTrace::set_access_type(::ProtoMessage::CustomMemTrace_AccessType value) {
  assert(::ProtoMessage::CustomMemTrace_AccessType_IsValid(value));
  set_has_access_type();
  access_type_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.CustomMemTrace.access_type)
}

// required .ProtoMessage.CustomMemTrace.HitStatus hit_status = 5;
inline bool CustomMemTrace::has_hit_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CustomMemTrace::set_has_hit_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CustomMemTrace::clear_has_hit_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CustomMemTrace::clear_hit_status() {
  hit_status_ = 0;
  clear_has_hit_status();
}
inline ::ProtoMessage::CustomMemTrace_HitStatus CustomMemTrace::hit_status() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.CustomMemTrace.hit_status)
  return static_cast< ::ProtoMessage::CustomMemTrace_HitStatus >(hit_status_);
}
inline void CustomMemTrace::set_hit_status(::ProtoMessage::CustomMemTrace_HitStatus value) {
  assert(::ProtoMessage::CustomMemTrace_HitStatus_IsValid(value));
  set_has_hit_status();
  hit_status_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.CustomMemTrace.hit_status)
}

// required int32 thread_id = 6;
inline bool CustomMemTrace::has_thread_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CustomMemTrace::set_has_thread_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CustomMemTrace::clear_has_thread_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CustomMemTrace::clear_thread_id() {
  thread_id_ = 0;
  clear_has_thread_id();
}
inline ::google::protobuf::int32 CustomMemTrace::thread_id() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.CustomMemTrace.thread_id)
  return thread_id_;
}
inline void CustomMemTrace::set_thread_id(::google::protobuf::int32 value) {
  set_has_thread_id();
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.CustomMemTrace.thread_id)
}

// required .ProtoMessage.CustomMemTrace.DataRegion data_region = 7;
inline bool CustomMemTrace::has_data_region() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CustomMemTrace::set_has_data_region() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CustomMemTrace::clear_has_data_region() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CustomMemTrace::clear_data_region() {
  data_region_ = 0;
  clear_has_data_region();
}
inline ::ProtoMessage::CustomMemTrace_DataRegion CustomMemTrace::data_region() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.CustomMemTrace.data_region)
  return static_cast< ::ProtoMessage::CustomMemTrace_DataRegion >(data_region_);
}
inline void CustomMemTrace::set_data_region(::ProtoMessage::CustomMemTrace_DataRegion value) {
  assert(::ProtoMessage::CustomMemTrace_DataRegion_IsValid(value));
  set_has_data_region();
  data_region_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.CustomMemTrace.data_region)
}

// -------------------------------------------------------------------

// AddrAccessStats

// required int32 bb_id = 1;
inline bool AddrAccessStats::has_bb_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddrAccessStats::set_has_bb_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddrAccessStats::clear_has_bb_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddrAccessStats::clear_bb_id() {
  bb_id_ = 0;
  clear_has_bb_id();
}
inline ::google::protobuf::int32 AddrAccessStats::bb_id() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.bb_id)
  return bb_id_;
}
inline void AddrAccessStats::set_bb_id(::google::protobuf::int32 value) {
  set_has_bb_id();
  bb_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.bb_id)
}

// required uint64 address = 2;
inline bool AddrAccessStats::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddrAccessStats::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddrAccessStats::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddrAccessStats::clear_address() {
  address_ = GOOGLE_ULONGLONG(0);
  clear_has_address();
}
inline ::google::protobuf::uint64 AddrAccessStats::address() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.address)
  return address_;
}
inline void AddrAccessStats::set_address(::google::protobuf::uint64 value) {
  set_has_address();
  address_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.address)
}

// required uint64 line_address = 3;
inline bool AddrAccessStats::has_line_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddrAccessStats::set_has_line_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddrAccessStats::clear_has_line_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddrAccessStats::clear_line_address() {
  line_address_ = GOOGLE_ULONGLONG(0);
  clear_has_line_address();
}
inline ::google::protobuf::uint64 AddrAccessStats::line_address() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.line_address)
  return line_address_;
}
inline void AddrAccessStats::set_line_address(::google::protobuf::uint64 value) {
  set_has_line_address();
  line_address_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.line_address)
}

// required bool is_ifetch = 4;
inline bool AddrAccessStats::has_is_ifetch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddrAccessStats::set_has_is_ifetch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddrAccessStats::clear_has_is_ifetch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddrAccessStats::clear_is_ifetch() {
  is_ifetch_ = false;
  clear_has_is_ifetch();
}
inline bool AddrAccessStats::is_ifetch() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.is_ifetch)
  return is_ifetch_;
}
inline void AddrAccessStats::set_is_ifetch(bool value) {
  set_has_is_ifetch();
  is_ifetch_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.is_ifetch)
}

// required uint64 num_local_l1_hit = 5;
inline bool AddrAccessStats::has_num_local_l1_hit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddrAccessStats::set_has_num_local_l1_hit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddrAccessStats::clear_has_num_local_l1_hit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddrAccessStats::clear_num_local_l1_hit() {
  num_local_l1_hit_ = GOOGLE_ULONGLONG(0);
  clear_has_num_local_l1_hit();
}
inline ::google::protobuf::uint64 AddrAccessStats::num_local_l1_hit() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.num_local_l1_hit)
  return num_local_l1_hit_;
}
inline void AddrAccessStats::set_num_local_l1_hit(::google::protobuf::uint64 value) {
  set_has_num_local_l1_hit();
  num_local_l1_hit_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.num_local_l1_hit)
}

// required uint64 num_remote_l1_hit = 6;
inline bool AddrAccessStats::has_num_remote_l1_hit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddrAccessStats::set_has_num_remote_l1_hit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddrAccessStats::clear_has_num_remote_l1_hit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddrAccessStats::clear_num_remote_l1_hit() {
  num_remote_l1_hit_ = GOOGLE_ULONGLONG(0);
  clear_has_num_remote_l1_hit();
}
inline ::google::protobuf::uint64 AddrAccessStats::num_remote_l1_hit() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.num_remote_l1_hit)
  return num_remote_l1_hit_;
}
inline void AddrAccessStats::set_num_remote_l1_hit(::google::protobuf::uint64 value) {
  set_has_num_remote_l1_hit();
  num_remote_l1_hit_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.num_remote_l1_hit)
}

// required uint64 num_l2_hit = 7;
inline bool AddrAccessStats::has_num_l2_hit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AddrAccessStats::set_has_num_l2_hit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AddrAccessStats::clear_has_num_l2_hit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AddrAccessStats::clear_num_l2_hit() {
  num_l2_hit_ = GOOGLE_ULONGLONG(0);
  clear_has_num_l2_hit();
}
inline ::google::protobuf::uint64 AddrAccessStats::num_l2_hit() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.num_l2_hit)
  return num_l2_hit_;
}
inline void AddrAccessStats::set_num_l2_hit(::google::protobuf::uint64 value) {
  set_has_num_l2_hit();
  num_l2_hit_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.num_l2_hit)
}

// required uint64 num_memory_access = 8;
inline bool AddrAccessStats::has_num_memory_access() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AddrAccessStats::set_has_num_memory_access() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AddrAccessStats::clear_has_num_memory_access() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AddrAccessStats::clear_num_memory_access() {
  num_memory_access_ = GOOGLE_ULONGLONG(0);
  clear_has_num_memory_access();
}
inline ::google::protobuf::uint64 AddrAccessStats::num_memory_access() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.num_memory_access)
  return num_memory_access_;
}
inline void AddrAccessStats::set_num_memory_access(::google::protobuf::uint64 value) {
  set_has_num_memory_access();
  num_memory_access_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.num_memory_access)
}

// required int32 thread_id = 9;
inline bool AddrAccessStats::has_thread_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AddrAccessStats::set_has_thread_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AddrAccessStats::clear_has_thread_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AddrAccessStats::clear_thread_id() {
  thread_id_ = 0;
  clear_has_thread_id();
}
inline ::google::protobuf::int32 AddrAccessStats::thread_id() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.thread_id)
  return thread_id_;
}
inline void AddrAccessStats::set_thread_id(::google::protobuf::int32 value) {
  set_has_thread_id();
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.thread_id)
}

// required .ProtoMessage.AddrAccessStats.DataRegion data_region = 10;
inline bool AddrAccessStats::has_data_region() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AddrAccessStats::set_has_data_region() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AddrAccessStats::clear_has_data_region() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AddrAccessStats::clear_data_region() {
  data_region_ = 0;
  clear_has_data_region();
}
inline ::ProtoMessage::AddrAccessStats_DataRegion AddrAccessStats::data_region() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.data_region)
  return static_cast< ::ProtoMessage::AddrAccessStats_DataRegion >(data_region_);
}
inline void AddrAccessStats::set_data_region(::ProtoMessage::AddrAccessStats_DataRegion value) {
  assert(::ProtoMessage::AddrAccessStats_DataRegion_IsValid(value));
  set_has_data_region();
  data_region_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.data_region)
}

// required bool is_metadata = 11;
inline bool AddrAccessStats::has_is_metadata() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddrAccessStats::set_has_is_metadata() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddrAccessStats::clear_has_is_metadata() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddrAccessStats::clear_is_metadata() {
  is_metadata_ = false;
  clear_has_is_metadata();
}
inline bool AddrAccessStats::is_metadata() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.is_metadata)
  return is_metadata_;
}
inline void AddrAccessStats::set_is_metadata(bool value) {
  set_has_is_metadata();
  is_metadata_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.is_metadata)
}

// required uint64 exec_cycles = 12;
inline bool AddrAccessStats::has_exec_cycles() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AddrAccessStats::set_has_exec_cycles() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AddrAccessStats::clear_has_exec_cycles() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AddrAccessStats::clear_exec_cycles() {
  exec_cycles_ = GOOGLE_ULONGLONG(0);
  clear_has_exec_cycles();
}
inline ::google::protobuf::uint64 AddrAccessStats::exec_cycles() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.AddrAccessStats.exec_cycles)
  return exec_cycles_;
}
inline void AddrAccessStats::set_exec_cycles(::google::protobuf::uint64 value) {
  set_has_exec_cycles();
  exec_cycles_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.AddrAccessStats.exec_cycles)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMessage

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ProtoMessage::CustomMemTrace_AccessType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMessage::CustomMemTrace_AccessType>() {
  return ::ProtoMessage::CustomMemTrace_AccessType_descriptor();
}
template <> struct is_proto_enum< ::ProtoMessage::CustomMemTrace_HitStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMessage::CustomMemTrace_HitStatus>() {
  return ::ProtoMessage::CustomMemTrace_HitStatus_descriptor();
}
template <> struct is_proto_enum< ::ProtoMessage::CustomMemTrace_DataRegion> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMessage::CustomMemTrace_DataRegion>() {
  return ::ProtoMessage::CustomMemTrace_DataRegion_descriptor();
}
template <> struct is_proto_enum< ::ProtoMessage::AddrAccessStats_DataRegion> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMessage::AddrAccessStats_DataRegion>() {
  return ::ProtoMessage::AddrAccessStats_DataRegion_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_custom_5fmem_5ftrace_2eproto
